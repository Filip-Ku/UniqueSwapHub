@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<h1 class="display-4 text-center mb-5 stylized-heading">Wynajmuj łatwo. Korzystaj mądrze.</h1>

<form method="post" asp-page="./Index" asp-page-handler="Search" id="searchForm">
    <div class="input-group w-50 mx-auto mb-4">
        <input 
            type="text" 
            id="searchInput" 
            name="SearchText" 
            class="form-control" 
            placeholder="Wyszukaj przedmiot..."
            value="@Model.SearchText" />
        <button type="submit" class="btn btn-primary">
            <img src="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fstatic.vecteezy.com%2Fsystem%2Fresources%2Fpreviews%2F011%2F732%2F488%2Foriginal%2Fhand-drawn-magnifying-glass-illustration-png.png&f=1&nofb=1&ipt=78dfae994f7c12a12c3192e2ea368852f07c002716881c8e96655b9339c202c7" alt="Szukaj" style="width: 30px; height: 30px;" />
        </button>
    </div>
</form>

@if (Model.Items != null && Model.Items.Any())
{
    <div class="item-grid">
    @foreach (var item in Model.Items)
    {
        <div class="item-card">
            <div class="item-image-wrapper">
                <img src="@item.imageUrl" alt="@item.name" class="item-image" />
            </div>
            <div class="item-info">
                <h5 class="item-title">@item.name</h5>
                <p class="item-price">@item.pricePerDay zł/dzień</p>
                <p class="item-available">Dostępny: <strong>@(item.available ? "Tak" : "Nie")</strong></p>
                <p class="item-description">@item.description</p>
            </div>
        </div>
    }
    </div>
}
else
{
    <p class="text-center">Brak danych.</p>
}

<style>
    .item-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 2%;
        justify-content: space-between;
        margin-top: 2rem;
    }

    .item-card {
        border-radius: 12px;
        overflow: hidden;
        background-color: #fff;
        width: 48%; 
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        transition: transform 0.2s ease-in-out;
        display: flex;
        flex-direction: column;
    }

    .item-card:hover {
        transform: translateY(-4px);
    }

    .item-image-wrapper {
        width: 100%;
        height: 250px;
        overflow: hidden;
        background-color: #f9f9f9;
    }

    .item-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }

    .item-info {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.4rem;
    }

    .item-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
    }

    .item-price {
        font-size: 1rem;
        color: #1c8f5c;
        font-weight: 500;
    }

    .item-available,
    .item-description {
        font-size: 0.85rem;
        color: #666;
    }

    .stylized-heading {
    font-family: 'Roboto', sans-serif;
    font-weight: 700;
    font-size: 3rem;
    color: #4b7bec;
    margin-top: 30px;
    text-transform: uppercase;
    letter-spacing: 3px;
    background: linear-gradient(45deg, #4b7bec, #6a1b9a);
    -webkit-background-clip: text;
    color: transparent;
    text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.stylized-heading:hover {
    transform: scale(1.1);
    opacity: 0.8;
}

</style>
